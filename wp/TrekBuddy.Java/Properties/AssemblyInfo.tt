<#@ template language="C#" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Resources;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle("TrekBuddy.Midlet")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("TrekBuddy.Midlet")]
[assembly: AssemblyCopyright("Copyright © KrUhC 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]

// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(false)]

// The following GUID is for the ID of the typelib if this project is exposed to COM
[assembly: Guid("f3c959e1-4a75-4f64-a0a1-fd6b881471e8")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:
[assembly: AssemblyVersion("<#= this.VersionNumber #>")]
[assembly: AssemblyFileVersion("<#= this.VersionNumber #>.<#= this.RevisionNumber #>")]
[assembly: AssemblyInformationalVersion("<#= this.VersionNumber #>u<#= this.RevisionNumber #>")]
[assembly: NeutralResourcesLanguageAttribute("en-US")]
<#+
	int RevisionNumber = new Func<int>(delegate()
    {
		const string PROPERTIES = @"c:\Users\pour\Documents\Visual Studio 2013\Projects\TrackingApp\build.properties";
        Dictionary<string, string> properties = new Dictionary<string, string>(2);
        char[] separators = { '=' };
        using (var file = new StreamReader(new FileStream(PROPERTIES, FileMode.Open, FileAccess.Read)))
        {
            string line = null;
            while ((line = file.ReadLine()) != null)
            {
                if (!line.StartsWith("#"))
                {
                    string[] pair = line.Split(separators);
                    properties.Add(pair[0], pair[1]);
                }
            }
        }
        int revisionVersion = int.Parse(properties["revision_version"]);
		/*
        revisionVersion++;
        properties["revision_version"] = revisionVersion.ToString();
        using (var file = new StreamWriter(new FileStream(PROPERTIES, FileMode.Create, FileAccess.Write)))
        {
            foreach (string key in properties.Keys)
            {
                file.WriteLine("{0}={1}", key, properties[key]);
            }
        }
        Console.WriteLine("T4: revision version changed to: {0}", buildVersion);
		*/
		Console.WriteLine("T4: revision version: {0}", revisionVersion);
        return revisionVersion;
    })();
	string VersionNumber = new Func<string>(delegate()
    {
		const string PROPERTIES = @"c:\Users\pour\Documents\Visual Studio 2013\Projects\TrackingApp\build.properties";
        Dictionary<string, string> properties = new Dictionary<string, string>(2);
        char[] separators = { '=' };
        using (var file = new StreamReader(new FileStream(PROPERTIES, FileMode.Open, FileAccess.Read)))
        {
            string line = null;
            while ((line = file.ReadLine()) != null)
            {
                if (!line.StartsWith("#"))
                {
                    string[] pair = line.Split(separators);
                    properties.Add(pair[0], pair[1]);
                }
            }
        }
        string currentVersion = properties["current_version"];
		Console.WriteLine("T4: version: {0}", currentVersion);
        return currentVersion;
    })();
#>